{{#class}}
package {{implementationPackageName}};

import {{interfacePackageName}}.*;
{{#containsUuid}}
import java.util.UUID;
{{/containsUuid}}
{{#ContainsIMsg}}
import com.github.hermod.ser.Msg;
{{/ContainsIMsg}}

/**
 * {{implementationName}}
 *
 * <code>{{docName}} = {{id}}</code>
 * 
 * @author 
 * 
 */
 public final class {{implementationName}} extends {{implementationClass}} implements {{interfaceName}}
{
{{#fields}}
    private final static int {{docName}} = {{id}};
{{/fields}}

{{#fields}}
    @Override
    public {{type}}{{#isArray}}[]{{/isArray}} get{{capitalizeName}}() 
    {
    	{{#isBasicType}}
        return this.getAs{{capitalizeType}}{{#isArray}}s{{/isArray}}({{docName}});
        {{/isBasicType}}
        {{#isEnum}}
        return {{type}}.values()[this.getAsInt({{docName}})];
        {{/isEnum}}
        {{#isUuid}}
        return uuidFromBytes(this.getAsBytes({{docName}}));
        {{/isUuid}}
        {{#isMessage}}
        final {{type}} aMsg = new {{implementationClass}}();
        this.getAsMsg({{docName}}, (Msg) aMsg);
        return ({{type}}) aMsg;
        {{/isMessage}}
    }
    
    @Override
    public void set{{capitalizeName}}(final {{type}}{{#isArray}}[]{{/isArray}} a{{capitalizeName}}) 
    {
        {{#isBasicType}}
        this.set({{docName}}, a{{capitalizeName}});
        {{/isBasicType}}
        {{#isEnum}}
        this.set({{docName}}, a{{capitalizeName}}.ordinal());
        {{/isEnum}}
        {{#isUuid}}
        this.set({{docName}}, uuidAsBytes(a{{capitalizeName}}));
        {{/isUuid}}
        
		{{#isMessage}}
	    if (a{{capitalizeName}} instanceof Msg) 
        {
            this.set({{docName}}, (Msg) a{{capitalizeName}});
        }
		{{/isMessage}}
    }
    
{{/fields}}
}
{{/class}}

